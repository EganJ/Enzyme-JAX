steps:
  - name: "CI {{matrix.arch}} -- {{matrix.os}}"
    matrix:
      setup:
        arch:
          - aarch64
          - x86_64
        os:
          - linux
          - macos
          - windows
        bazel:
          - 5.2.0
      adjustments:
        - with:
            os: windows
            arch: aarch64
          skip: true
    agents:
      queue: "juliaecosystem"
      os: "{{matrix.os}}"
      arch: "{{matrix.arch}}"
    commands: |
      uname -a
      uname -m
      mkdir -p .local/bin
      export PATH="`pwd`/.local/bin:\$PATH"
      echo "openssl md5 | cut -d' ' -f2" > .local/bin/md5
      chmod +x .local/bin/md5

      if [ "{{matrix.os}}" == "macos" ]; then
        if [ "{{matrix.arch}}" == "aarch64" ]; then
          curl -fLO https://repo.anaconda.com/miniconda/Miniconda3-py310_23.3.1-0-MacOSX-arm64.sh
          curl -fLO "https://github.com/bazelbuild/bazel/releases/download/{{matrix.bazel}}/bazel-{{matrix.bazel}}-installer-darwin-arm64.sh"
        else
          curl -fLO https://repo.anaconda.com/miniconda/Miniconda3-py310_23.3.1-0-MacOSX-{{matrix.arch}}.sh
          curl -fLO "https://github.com/bazelbuild/bazel/releases/download/{{matrix.bazel}}/bazel-{{matrix.bazel}}-installer-darwin-x86_64.sh"
        fi
        chmod +x Miniconda*.sh
        ./Miniconda*.sh -b -p `pwd`/conda
        rm Miniconda*.sh
        bash bazel*.sh --prefix=`pwd`/.local
        rm bazel*.sh
      elif [ "{{matrix.os}}" == "linux" ]; then      
        wget https://repo.anaconda.com/miniconda/Miniconda3-py310_23.3.1-0-Linux-{{matrix.arch}}.sh
        chmod +x Miniconda*.sh
        ./Miniconda*.sh -b -p `pwd`/conda
        rm Miniconda*.sh
        conda install -c conda-forge bazel -y
      else
        curl -fLO https://repo.anaconda.com/miniconda/Miniconda3-py310_23.3.1-0-Windows-{{matrix.arch}}.exe
        start /wait "" Miniconda3*.exe /InstallationType=JustMe /RegisterPython=0 /S /D=`pwd`/conda
        rm Miniconda*.exe
        conda install -c conda-forge bazel -y
      fi
      conda install -c conda-forge conda openjdk gcc -y
      export JDK_DIR=`find conda/pkgs -type d -iname "*openjdk*"`
      export JAVA_HOME="`pwd`/\$JDK_DIR"
      python -m ensurepip --upgrade
      python -m pip install --user numpy wheel
      mkdir baztmp
      bazel --output_user_root=`pwd`/baztmp build :enzyme_jax || cat `find baztmp "jvm.out"`
      cp bazel-bin/*.whl .
      python -m pip install *.whl
      cd test && python -m pip install jax && python test.py
    artifact_paths:
      - "*.whl"

    timeout_in_minutes: 120
